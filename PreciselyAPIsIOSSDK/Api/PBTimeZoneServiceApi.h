#import <Foundation/Foundation.h>
#import "PBErrorInfo.h"
#import "PBTimezoneAddressRequest.h"
#import "PBTimezoneLocationRequest.h"
#import "PBTimezoneResponse.h"
#import "PBTimezoneResponseList.h"
#import "PBApi.h"

/**
* Precisely APIs
* Enhance & enrich your data, applications, business processes, and workflows with rich location, information, and identify APIs.
*
* The version of the OpenAPI document: 12.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface PBTimeZoneServiceApi: NSObject <PBApi>

extern NSString* kPBTimeZoneServiceApiErrorDomain;
extern NSInteger kPBTimeZoneServiceApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(PBApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Timezone Batch by Location.
/// Identifies and retrieves the local time of any location in the world for a given latitude, longitude and time. The input and retrieved time format is in milliseconds.
///
/// @param timezoneLocationRequest 
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return PBTimezoneResponseList*
-(NSURLSessionTask*) getBatchTimezoneByLocationWithTimezoneLocationRequest: (PBTimezoneLocationRequest*) timezoneLocationRequest
    completionHandler: (void (^)(PBTimezoneResponseList* output, NSError* error)) handler;


/// Timezone By Address.
/// Identifies and retrieves the local time of any location in the world for a given address and time. The input and retrieved time format is in milliseconds.
///
/// @param timestamp Timestamp in miliseconds.
/// @param address The address to be searched.
/// @param matchMode Match modes determine the leniency used to make a match between the input address and the reference data (Default is relaxed) (optional)
/// @param country Country ISO code (Default is USA) (optional)
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return PBTimezoneResponse*
-(NSURLSessionTask*) getTimezoneByAddressWithTimestamp: (NSString*) timestamp
    address: (NSString*) address
    matchMode: (NSString*) matchMode
    country: (NSString*) country
    completionHandler: (void (^)(PBTimezoneResponse* output, NSError* error)) handler;


/// Timezone Batch by Address.
/// Identifies and retrieves the local time of any location in the world for a given address and time. The input and retrieved time format is in milliseconds.
///
/// @param timezoneAddressRequest 
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return PBTimezoneResponseList*
-(NSURLSessionTask*) getTimezoneByAddressBatchWithTimezoneAddressRequest: (PBTimezoneAddressRequest*) timezoneAddressRequest
    completionHandler: (void (^)(PBTimezoneResponseList* output, NSError* error)) handler;


/// Timezone By Location.
/// Identifies and retrieves the local time of any location in the world for a given latitude, longitude and time. The input and retrieved time format is in milliseconds.
///
/// @param timestamp Timestamp in miliseconds.
/// @param longitude Longitude of the location.
/// @param latitude Latitude of the location.
/// 
///  code:200 message:"OK",
///  code:400 message:"Bad Request",
///  code:500 message:"Internal Server Error"
///
/// @return PBTimezoneResponse*
-(NSURLSessionTask*) getTimezoneByLocationWithTimestamp: (NSString*) timestamp
    longitude: (NSString*) longitude
    latitude: (NSString*) latitude
    completionHandler: (void (^)(PBTimezoneResponse* output, NSError* error)) handler;



@end
